//242. Valid Anagram
//https://leetcode.com/problems/valid-anagram/description/?envType=problem-list-v2&envId=sorting

// Brute force Method (Bubble sort) ---- it run correct but exited the time complexity


// class Solution {
//     public boolean isAnagram(String s, String t) {
//         char[] ss=s.toCharArray();
//         char[] tt=t.toCharArray();
//         if(ss.length!=tt.length){return false;}
//         for(int i=0;i<ss.length;i++){
//             for(int j=ss.length-1;j>i ;j--){
//                 if(ss[j-1]>ss[j]){
//                     char temp=ss[j-1];
//                     ss[j-1]=ss[j];
//                     ss[j]=temp;
//                 }
//                 if(tt[j-1]>tt[j]){
//                     char temp=tt[j-1];
//                     tt[j-1]=tt[j];
//                     tt[j]=temp;
//                 }
//             }
//             if(ss[i]!=tt[i]){
//                 return false;
//             }
//         }
//         return true;
//     }
// }

// Brute force Method Method


// class Solution{
//     public boolean isAnagram(String s, String t){
//         char[] ss=s.toCharArray();
//         char[] tt=t.toCharArray();
//         Arrays.sort(ss);
//         Arrays.sort(tt);
 
//         return Arrays.equals(ss,tt);
//     }
// }

// Method 2

class Solution{
    /*  -The static {} block runs once per class load.Some competitive programmers use it for precomputation or I/O optimization before any test cases run.
        -The static { ... } block runs once automatically when the class is loaded (before main() or any method calls).
        -In your case, it calls isAnagram("", "v") 1001 times immediately when the JVM loads the class.*/
    static { 
        for (int j = 0; j < 1001; j++) {
            isAnagram("", "v");
        }
    }
    public static boolean isAnagram(String s, String t){
        if(s.length()!=t.length())return false;
        int[] arr=new int[26];
        for(int i=0;i<s.length();i++){
            arr[s.charAt(i)-'a']++;
            arr[t.charAt(i)-'a']--;
        }
        for(int i:arr){
            if(i!=0){
                return false;
            }
        }
        return true;
    }
}
