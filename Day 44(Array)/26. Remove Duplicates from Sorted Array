//26. Remove Duplicates from Sorted Array
//https://leetcode.com/problems/remove-duplicates-from-sorted-array/description/

/*
Use two pointers:

i(fast pointer) to iterate through the array

j(slow pointer) to keep track of the position to insert the next unique element

Compare nums[i] with nums[i-1] (because array is sorted)

If different, assign nums[j] = nums[i] and increment j

*/

class Solution {
    public int removeDuplicates(int[] nums) {
        int k=1;
        for(int i=1;i<nums.length;i++){
            if(nums[i]!=nums[i-1]){
                nums[k++]=nums[i];
            }
        }
        return k;
    }
}

/*Approach / Strategy

Whenever you see such a problem:

Sort check: Is the array sorted? If yes, duplicates are adjacent → you can easily compare with the previous element.

Two Pointers Setup:

slow pointer → place for next unique value (k in your code)

fast pointer → scanning the array (i in your code)

Compare & Move:

If nums[fast] != nums[fast-1] → assign it to nums[slow], increment slow.

Else → skip.

Return: the length of the unique segment (slow).*/
