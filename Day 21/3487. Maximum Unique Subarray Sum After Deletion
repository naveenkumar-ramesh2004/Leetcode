//3487. Maximum Unique Subarray Sum After Deletion
//https://leetcode.com/problems/maximum-unique-subarray-sum-after-deletion/description/?envType=daily-question&envId=2025-07-25

class Solution {
    public int maxSum(int[] nums) {
        int[] arr=new int[101];
        int max=-100;
        int count1=0;
        int count2=0;
        boolean negative=false;
        for(int i=0;i<nums.length;i++){
            int val=nums[i];
            if(val>0){
                arr[val]=1;
                count1++;
            }
            else{
                // if(arr[-1*val]!=1){
                //     arr[-1*val]=-1;
                // }
                negative=true;
                if(max<val){
                    max=val;

                }
            }
        }
        int sum=0;
        if(count1==0&&negative){if(arr[-1*max]!=1){
            arr[-1*max]=-1;
            count2++;
        }}
        
        for(int i=1;i<101;i++){
            if(arr[i]==1){
                sum+=i;
            }
            else if(count1==0&&arr[i]==-1){
                sum+=i;
            }
        }
        return (count1>0&&count2>=0)?sum:-1*sum;


        
    }
}
