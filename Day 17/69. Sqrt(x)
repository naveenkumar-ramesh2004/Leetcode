69. Sqrt(x)
https://leetcode.com/problems/sqrtx/description/?envType=problem-list-v2&envId=binary-search

class Solution {
    public int mySqrt(int x) {

        if (x == 0 || x == 1)
            return x;


        int start = 1;
        int end = x;
        int mid = -1;
        while (start <= end) {

            mid = start + (end - start) / 2;

            if ((long) mid * mid > (long) x)
                end = mid - 1;
            else if (mid * mid == x)

                return mid;
            else
                // If the square of the middle value is less than x, move the "start" to the right (mid + 1).
                start = mid + 1;
        }

        // The loop ends when "start" becomes greater than "end", and "end" is the integer value of the square root.
        // However, since we might have been using integer division in the calculations,
        // we round down the value of "end" to the nearest integer to get the correct square root.
        return Math.round(end);
    }
}
